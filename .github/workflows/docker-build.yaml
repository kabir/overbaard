name: Build MultiArch Docker Image

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:

# permissions are needed if pushing to ghcr.io
permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache register
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
      - name: Login to Quay.io
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_IO_USER }}
          password: ${{ secrets.QUAY_IO_TOKEN }}
      - name: Docker meta
        id: add-docker-metadata
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            quay.io/repository/overbaard/overbaard-dev-env
          # Docker tags based on the following events/attributes
          tags: |
            event=workflow_dispatch,type=sha
#              type=schedule
#              type=ref,event=branch
#              type=ref,event=pr
#              type=semver,pattern={{version}}
#              type=semver,pattern={{major}}.{{minor}}
#              type=semver,pattern={{major}}
#              type=sha
              
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: docker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.add-docker-metadata.outputs.tags }}
          labels: ${{ steps.add-docker-metadata.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
